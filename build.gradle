import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort
import com.github.spotbugs.snom.SpotBugsTask

plugins {
    id 'java-library'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.7.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        // TODO - move to v. 8 which is not working for some reason
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = 'net.juniper.netconf'

ext {
    log4jVersion = '2.14.1'
    lombokVersion = '1.18.22'
    mockitoVersion = '4.0.0'
}

tasks.withType(Test) {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

checkstyle {
    toolVersion '9.1'
    maxWarnings 0
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = true
        html.required = true
    }
}

spotbugs {
    effort = Effort.MAX
    reportLevel = Confidence.LOW
    ignoreFailures.set false
    extraArgs.add "-longBugCodes"
}

tasks.withType(SpotBugsTask) {
    //noinspection GroovyAssignabilityCheck
    reports(({
        text.enabled = true
    }))

    //noinspection GroovyAssignabilityCheck
    task "${it.name}Report" {
        def input = file(reports.getByName("TEXT").destination)
        inputs.file input
        doLast {
            input.readLines().forEach {
                println(it)
            }
        }
    }
    it.finalizedBy "${it.name}Report"
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation 'com.google.guava:guava:31.0.1-jre'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}